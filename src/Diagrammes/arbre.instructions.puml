@startuml
package instructions {

	class Affectation extends Instruction {
		+ Affectation(Idf left, Expression right, int ligne, int colonne)
		+ void verifier()
		+ String toMIPS()
	}

	Affectation --"1" Idf
	Affectation --"1" Expression

	class Ecrire extends Instruction{
		+ Ecrire (Expression e, int ligne, int colonne)
		+ void verifier()
		+ String toMIPS()
	}
	Ecrire --"1" Expression

	abstract class Instruction extends ArbreAbstrait{
		# Instruction(int ligne, int colonne)
	}

	class Retourne extends Instruction implements Typed{
		- int nbVarLocalesFonction
		+ Retourne (Expression e, int ligne, int colonne)
		+ void verifier()
		+ void setFonction(Fonction f)
		+ String toMIPS()
		+ Type getType()
	}
	Retourne --"1" Expression
	Retourne --"1" Fonction

	class Condition extends Instruction implements Typed{
		+ Retourne (Expression e, BlocDInstructions biSi, BlocDInstructions biSinon, int ligne, int colonne)
		+ void verifier()
		+ String toMIPS()
	}
	Condition --"1" Expression
	Condition --"1" BlocDInstructions : bi_si
	Condition --"1" BlocDInstructions : bi_sinon

}
@enduml